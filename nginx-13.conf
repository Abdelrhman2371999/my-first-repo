user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$upstream_connect_time $upstream_header_time $upstream_response_time $request_time';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    client_max_body_size 8m;

    # ============================
    # Upstream Definitions
    # ============================

    upstream cluster_fnt {
        zone cluster_fnt 64k;
        state /var/lib/nginx/state/cluster_fnt.state;

        server 10.0.10.149;
        server 10.0.10.150;
    }

    upstream cluster_back {
        zone cluster_back 64k;
        state /var/lib/nginx/state/cluster_back.state;

        server 10.0.10.149;
        server 10.0.10.150;
    }

    # ============================
    # Server Configuration
    # ============================

    server {
        listen 80;
        server_name _;

        # =========
        # Frontend
        # =========
        location / {
            proxy_pass http://cluster_fnt;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # =========
        # Backend (PHP)
        # =========
        location ~ \.php$ {
            proxy_pass http://cluster_back;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # =========
        # Health Checks (Optional)
        # =========
        location @fnt_hc {
            proxy_pass http://cluster_fnt;
            proxy_set_header Host $host;
            health_check uri=/healthz;
        }

        location @back_hc {
            proxy_pass http://cluster_back;
            proxy_set_header Host $host;
            health_check uri=/healthz;
        }

        # =========
        # Dynamic Upstream Configuration API
        # =========
        location /upstream_conf {
            api write=on;
            allow 10.0.10.0/24;
            deny all;
        }

        # =========
        # Error Pages
        # =========
        error_page 500 502 503 504 /custom_50x.html;
        location = /custom_50x.html {
            root /etc/nginx;
        }
    }
}
